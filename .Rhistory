nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-departure+hours(15)+minutes(50)
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong-Kong")
arrive<-with_tz(arrive,"Asia/Hong-kong")
arrive<-with_tz(arrive,"Asia/Hong_kong")
rrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz=Singapore)
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long<-(last_time,arrive)
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url,destfile = "pdata")
list.files()
p<-read.csv(pdate)
p<-read.csv("pdate")
p<-read.csv("pdate.csv")
p<-read.csv("pdata")
head(p)
str(p)
names(p)
?strsplit
pnames<-names(p)
sp<-strsplit(pnames,"wgtp")
str(sp)
head(sp)
sp[123]
x<-"an apple a day"
strsplit((x,"apple"))
split(x,"apple")
split(x,"ap")
y<list("apple","orange","banana")
y<-list("apple","orange","banana")
strsplt(y,"or")
strsplit(y,"ba")
strsplit(y,"banana")
strsplit(y,"banana")
x<-"123456_85_45"
strsplit(x,"_")
strsplit(x,"4")
x<-"apple is not bad"
strsplit(x,"apple")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile = "pfile.csv")
pdata<-read.csv("pfile.csv")
str(pdata)
head(pdata,4)
head(pdata,8)
library(data.table)
pdata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=c(1,2,4),select=c(1,2,4,5))
pdata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=4,select=c(1,2,4,5),col.names =c("x","rank","economy","millions_of_dollars")
)
head(pdata)
mean(as.numeric(gsub(",","",pdata$millions_of_dollars)))
mean(as.numeric(gsub(",","",pdata$millions_of_dollars)),na.rm = TRUE)
pdata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=4,nrows=190,select=c(1,2,4,5),col.names =c("x","rank","economy","millions_of_dollars"))
head(pdata)
mean(as.numeric(gsub(",","",pdata$millions_of_dollars)),na.rm = TRUE)
x<-grep("^United",pdata$country)
str(x)
x<-grep("^United",pdata$economy)
head(x)
count(x)
str(x)
x
x<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
str(x)
head(x)
head(x)
xdata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=4,nrows=190,select=c(1,2,4,5),col.names =c("v1","rank","economy","millions_of_dollars"))
head(xdata)
ydata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
head(ydata)
str(ydata)
xdata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=4,nrows=190,select=c(1,2,4,5),col.names =c("countrycode","rank","economy","millions_of_dollars"))
mergedata<-merge(xdata,ydata,by=countrycode)
mergedata<-merge(xdata,ydata,by="countrycode")
xdata<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",skip=4,nrows=190,select=c(1,2,4,5),col.names =c("CountryCode","rank","economy","millions_of_dollars")
)
mergedata<-merge(xdata,ydata,by=CountryCode)
mergedata<-merge(xdata,ydata,by="CountryCode")
g<-grep("Fiscal year end: June",mergedata$'Special Notes')
length(g)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
tc<-timeol(sampleTimes)
tc<-timecol(sampleTimes)
str(sampleTimes)
length(grep("^2012",sampleTimes))
p<-as.Date(SapleTimes[grep("^2012",sampleTimes)])
p<-as.Date(SampleTimes[grep("^2012",sampleTimes)])
p<-as.Date(SampleTimes[grep("^2012",SampleTimes)])
P<-as.Date(sampleTimes[grep("^2012",sampleTimes)])
length(Weekdays(p)=="Monday")
length(weekdays(p)=="Monday")
sum(weekdays(p)=="Monday")
length(p)
P<-sampleTimes[grep("^2012",sampleTimes)]
length(p)
length(grep("^2012",sampleTimes))
x<-sampleTimes[grep("^2012",sampleTimes)]
length(x)
x1<-as.Date(sampleTimes[grep("^2012",sampleTimes)])
length(x1)
length(weekdays(as.Date(sampleTimes[grep("^2012",sampleTimes)]))=="Monday")
v<-weekdays(x)=="Monday"
length(v)
v<-weekdays(x1)=="Monday"
length(v)
sum(weekdays(as.Date(sampleTimes[grep("^2012",sampleTimes)]))=="Monday")
sum(v)
getwd()
source('C:/Users/SONY/Desktop/datasciencecoursera/run_analysis.R')
?with
?lm
?par
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
example("points")
?gl
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
daddy
swirl()
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(ozone~month,airquality)
boxplot(Ozone~month,airquality)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and wind in New York City")
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
legth(par())
length(par())
names((par()))
names(par())
par()$spin
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may
may<-(airquality$Month=="may")
may<-subset(airquality,Month==5)
points(may$Wind,may$Ozone,lty="solid",pch="5")
points(may$Wind,may$Ozone,col="blue",pch="17")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=10)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=("blue","red",legend=c("May,"Other Months"))
legend("topright",pch=c(17,8),col=("blue","red"),legend=c("May,"Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May,"Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(airquality$Wind,lty=2)
abline(median(airquality$Wind),lty=2)
abline(lm(airquality$Wind),lty=2)
med<-median((airquality$Wind))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
with(airquality,plot(Wind),plot(Ozone),main="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Soalr Radiation")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,title="Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main = ="Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main ="Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext('Ozone and Weather in Newyork City')
mtext('Ozone and Weather in Newyork City",outer=TRUE)
)
()
")"
mtext("Ozone and Weather in Newyork City",outer=TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
info()
PLOT(X,Y)
mtext("Ozone and Weather in New York City", outer = TRUE)
mtext("Ozone and Weather in Newyork City",outer=TRUE)
mtext("Ozone and Weather in New York City",outer=TRUE)
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
q()
swirl()
library(swirl)
swirl()
swirl()
head(airquality,iregularity)
head(airquality)
xyplot(ozone~wind,airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,data = airquality,col="red",pch="8",main="Big Apple Data")
xyplot(Ozone~Wind,data = airquality,pch=8,col="red",main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month),data = airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month,data = airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind,data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R",local=TRUE)
pathtofile("plot1.R",local="TRUE")
pathtofile("plot1.R",local==TRUE)
pathtofile("plot1.R",local=TRUE)
pathtofile("plot1.R",localset=TRUE)
pathtofile("plot1.R",local set=TRUE)
?quantile
?seq
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
?trellis.par.set
set.seed(1234)
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=
0.2)
dataframe<-data.frame(x,y)
dataframe
sum(dataframe$x)
22.93857/12
sum(dataframe[1:4,1])
plot(x,y)
z1<-rnorm(10,2,1.5)
plot(z1)
sum(z1)
?scale
scale(rnorm(100))
scale(rnorm(10,2,1.5))
rnorm(10,2,1.5)
p<-1.5*scale(rnorm(10,2,1.5))
sum(p)
p
j<-2+1.5*scale(rnorm(10,2,1.5))
j
sum(j[10,])
sum(j)
plot(j)
data<-as.matrix(dataframe)
data
data<-as.matrix(dataframe)[sample(1:12),]
data
?sample
image(t(data),[,nrow(data):1],yaxt="n")
image(t(data)[,nrow(data):1],yaxt="n")
image(t(data)[,nrow(data):1],yaxt="a")
image(t(data)[,nrow(data):1],yaxt="p")
image(t(data)[,nrow(data):1],yaxt="i")
image(t(data)[,nrow(data):1],yaxt="j")
image(t(data)[,nrow(data):1],yaxt="m")
image(t(data)[,nrow(data):1],yaxt="m")
?image
image(t(data)[,nrow(data):1])
image(t(data)[,nrow(data):1],yaxt="n")
image(data[,nrow(data):1],yaxt="n")
image(t(data)[,nrow(data):1],yaxt="n")
t(data)
data
?order
image(t(data)[,nrow(data):1],yaxt="n")
p1<-rnorm(12,mean=0,each=4),)
p1<-rnorm(12,mean=0,0.25)
p2<-rnorm(12,mean=1,0.75)
data1<-dataframe(x,y)
data1<-data.frame(x,y)
mat<-as.matrix(data1)
image(t(mat),nrow(mat),yaxt="n")
mat
image(t(mat)[,nrow(mat):1],yaxt="n")
image(t(data)[,nrow(data):1],yaxt="n")
set.seed(12345)
datamatrix<-matrix(rnorm(400),nrow = 40)
datamatrix
hh<-hclust(dist(datamatrix))
datamatrixordered<-datamatrix[hh$order,]
image(t(datamatrixordered),40:1,xlab = "Row Mean",ylab = "Row",pch=19)
image(t(datamatrixordered),40:1,,xlab = "Row Mean",ylab = "Row",pch=19)
image(t(datamatrixordered),40:1, ,xlab = "Row Mean",ylab = "Row",pch=19)
image(t(datamatrixordered)[,nrow(datamatrixordered):1])
set.seed(678910)
for(i in 1:40)
{con}
for(i in 1:40)
{}
for(i in 1:40){}
for(i in 1:40){
conflip<-rbinom(1,size = 1,prob = 0.5)
if(conflip)
{
datamatrix[i,]=datamatrix[i,]+rep(c(0,3),each=5)
}}
datamatrix
image(t(datamatrix)[,nrow(datamatrix):1])
image(1:10,1:40,t(datamatrix)[,nrow(datamatrix):1])
par(mar=rep(0.2,4))
image(1:10,1:40,t(datamatrix)[,nrow(datamatrix):1])
image(t(datamatrix)[,nrow(datamatrix):1])
par(mar=rep(2,6))
par(mar=rep(1,5))
par(mar=rep(0.5,5))
par(mar=rep(0.2,5))
par(mar=rep(0.5,3))
par(mar=rep(0.2,4))
image(t(datamatrix)[,nrow(datamatrix):1])
image(1:10,1:40,t(datamatrix)[,nrow(datamatrix):1])
image(1:40,1:10,t(datamatrix)[,nrow(datamatrix):1])
image(t(datamatrix)[,nrow(datamatrix):1])
?image
image(0:4,0:1,t(datamatrix)[,nrow(datamatrix):1])
image(1:10,1:80,t(datamatrix)[,nrow(datamatrix):1])
image(1:20,1:80,t(datamatrix)[,nrow(datamatrix):1])
image(1:10,1:40,t(datamatrix)[,nrow(datamatrix):1])
order(datamatrix)
str(datamatrix)
hh<-hclust(dist(datamatrix))
class(hh)
names(hh)
datamatrixordered<-datamatrix[hh$order,]
image(t(datamatrixordered)[,nrow(datamatrixordered):1])
svd1<-svd(scale(datamatrixordered))
svd1$u
svd1$v
svd1$d
?plot
plot(svd1$u[,1],1:40,,xlab="row",ylab="first left singular vector")
plot(svd1$u[,1],40:1,,xlab="row",ylab="first left singular vector")
?plot
plot(svd1$u[,1],40:1,xlab="row",ylab="first left singular vector")
plot(svd1$u[,1],40:1, ,xlab="row",ylab="first left singular vector")
plot(svd1$v[,1],xlab="row",ylab="first left singular vector")
par(mar=c(1,1,1,1))
plot(svd1$v[,1],xlab="row",ylab="first left singular vector")
par(mar=c(4,4,4,4))
plot(svd1$v[,1],xlab="row",ylab="first left singular vector")
par(mar=c(5,5,5,5))
plot(svd1$v[,1],xlab="row",ylab="first left singular vector")
plot(svd1$v[,1])
plot(svd1$v[,1],1:10)
plot(svd1$v[,1])
plot(svd1$v[,1],xlab="row",ylab="first left singular vector")
plot(svd1$u[,1],40:1, ,xlab="row",ylab="first left singular vector")
svd1$v
plot(svd1$v[1,])
dim(datamatrixordered)
dim(datamatrixordered)[1]
dim(datamatrixordered)[2]
image(t(datamatrixordered)[,nrow(datamatrixordered):1])
svd1$v
svda[,1]
svd1[,1]
svd1$v[,1]
?rbinom
library(Kernlab)
library(kernlab)
library(Kernlab)
install.packages("kernlab")
data(spam)
data(Spam)
data(spam)
data(Spam)
data(spam)
library(Kernalab)
library(kernlab)
data(spam)
set.seed(3435)
trainindiactor<-rbinom(4601,size=1,prob=0.5)
trainspam<-spam[trainindiactor==1,]
testspam<-spam[trainindiactor==0,]
plot(log10(trainspam[,1:4]+1))
names(trainspam[,1:4])
hcluster<-hclust(dist(t(trainspam[,1:57])))
plot(hcluster)
hcluster<-hclust(dist(trainspam[,1:57]))
plot(hcluster)
hcluster<-hclust(dist(t(trainspam[,1:57])))
plot(hcluster)
hcluster<-hclust(dist(trainspam[,1:57]))
plot(hcluster)
?reformulate
?glm
setwd("C:/Users/SONY/Desktop/RepData_PeerAssessment1")
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
str(averagestepsperintervalperdatetype)
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
range(averagestepsperintervalperdatetype$interval)
range(averagestepsperintervalperdatetype$steps)
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
str(averagestepsperintervalperdatetype)
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
str(averagestepsperintervalperdatetype)
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
str(averagestepsperintervalperdatetype)
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
ggplot(averagestepsperintervalperdatetype,aes(interval,steps),geom_line()+facet_grid(day ~ .))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
xyplot(interval~steps,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
xyplot(steps~interval,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
plot(steps~interval,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
plot(steps~interval,averagestepsperintervalperdatetype,type="l")
xyplot(steps~interval,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
xyplot(steps~interval+datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
xyplot(interval~steps+datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
xyplot(steps~interval+datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",lwd=1,layout=c(1,2))
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",lwd=1,layout=c(1,2))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",layout=c(1,2))
xyplot(steps~interval|datetype,averagestepsperintervalperdatetype,type="l",xlab="interval",ylab="average steps",layout=c(1,2))
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
meantotalstepsperday
str(totalstepsperday)
meantotalstepsperday
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
meantotalstepsperday
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
meantotalstepsperday
mediantotalstepsperday
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
mediantotalstepsperday
meantotalstepsperday
source('C:/Users/SONY/Desktop/RepData_PeerAssessment1/code.R')
